"""
This type stub file was generated by pyright.
"""

"""xmlWriter.py -- Simple XML authoring class"""
INDENT = ...
class XMLWriter:
	def __init__(self, fileOrPath, indentwhite=..., idlefunc=..., encoding=..., newlinestr=...) -> None:
		...
	
	def __enter__(self): # -> Self@XMLWriter:
		...
	
	def __exit__(self, exception_type, exception_value, traceback): # -> None:
		...
	
	def close(self): # -> None:
		...
	
	def write(self, string, indent=...): # -> None:
		"""Writes text."""
		...
	
	def writecdata(self, string): # -> None:
		"""Writes text in a CDATA section."""
		...
	
	def write8bit(self, data, strip=...): # -> None:
		"""Writes a bytes() sequence into the XML, escaping
		non-ASCII bytes.  When this is read in xmlReader,
		the original bytes can be recovered by encoding to
		'latin-1'."""
		...
	
	def write_noindent(self, string): # -> None:
		"""Writes text without indentation."""
		...
	
	def newline(self): # -> None:
		...
	
	def comment(self, data): # -> None:
		...
	
	def simpletag(self, _TAG_, *args, **kwargs): # -> None:
		...
	
	def begintag(self, _TAG_, *args, **kwargs): # -> None:
		...
	
	def endtag(self, _TAG_): # -> None:
		...
	
	def dumphex(self, data): # -> None:
		...
	
	def indent(self): # -> None:
		...
	
	def dedent(self): # -> None:
		...
	
	def stringifyattrs(self, *args, **kwargs): # -> str:
		...
	


def escape(data): # -> str:
	...

def escapeattr(data): # -> str:
	...

def escape8bit(data): # -> str:
	"""Input is Unicode string."""
	...

def hexStr(s): # -> str:
	...

