"""
This type stub file was generated by pyright.
"""

"""fontTools.misc.textTools.py -- miscellaneous routines."""
safeEval = ...
class Tag(str):
	@staticmethod
	def transcode(blob): # -> str:
		...
	
	def __new__(self, content): # -> Self@Tag:
		...
	
	def __ne__(self, other) -> bool:
		...
	
	def __eq__(self, other) -> bool:
		...
	
	def __hash__(self) -> int:
		...
	
	def tobytes(self): # -> bytes:
		...
	


def readHex(content): # -> bytes:
	"""Convert a list of hex strings to binary data."""
	...

def deHexStr(hexdata): # -> bytes:
	"""Convert a hex string to binary data."""
	...

def hexStr(data): # -> str:
	"""Convert binary data to a hex string."""
	...

def num2binary(l, bits=...): # -> str:
	...

def binary2num(bin): # -> int:
	...

def caselessSort(alist): # -> list[Unknown]:
	"""Return a sorted copy of a list. If there are only strings
	in the list, it will not consider case.
	"""
	...

def pad(data, size): # -> bytes:
	r""" Pad byte string 'data' with null bytes until its length is a
	multiple of 'size'.

	>>> len(pad(b'abcd', 4))
	4
	>>> len(pad(b'abcde', 2))
	6
	>>> len(pad(b'abcde', 4))
	8
	>>> pad(b'abcdef', 4) == b'abcdef\x00\x00'
	True
	"""
	...

def tostr(s, encoding=..., errors=...): # -> str:
	...

def tobytes(s, encoding=..., errors=...): # -> bytes:
	...

def bytechr(n): # -> bytes:
	...

def byteord(c): # -> int:
	...

def strjoin(iterable, joiner=...): # -> str:
	...

def bytesjoin(iterable, joiner=...): # -> bytes:
	...

if __name__ == "__main__":
	...
