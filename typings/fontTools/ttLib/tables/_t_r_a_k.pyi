"""
This type stub file was generated by pyright.
"""

from . import DefaultTable
from collections.abc import MutableMapping

TRAK_HEADER_FORMAT = ...
TRAK_HEADER_FORMAT_SIZE = ...
TRACK_DATA_FORMAT = ...
TRACK_DATA_FORMAT_SIZE = ...
TRACK_TABLE_ENTRY_FORMAT = ...
TRACK_TABLE_ENTRY_FORMAT_SIZE = ...
SIZE_VALUE_FORMAT = ...
SIZE_VALUE_FORMAT_SIZE = ...
PER_SIZE_VALUE_FORMAT = ...
PER_SIZE_VALUE_FORMAT_SIZE = ...
class table__t_r_a_k(DefaultTable.DefaultTable):
	dependencies = ...
	def compile(self, ttFont): # -> bytes:
		...
	
	def decompile(self, data, ttFont): # -> None:
		...
	
	def toXML(self, writer, ttFont): # -> None:
		...
	
	def fromXML(self, name, attrs, content, ttFont): # -> None:
		...
	


class TrackData(MutableMapping):
	def __init__(self, initialdata=...) -> None:
		...
	
	def compile(self, offset): # -> bytes:
		...
	
	def decompile(self, data, offset): # -> None:
		...
	
	def toXML(self, writer, ttFont): # -> None:
		...
	
	def fromXML(self, name, attrs, content, ttFont): # -> None:
		...
	
	def sizes(self): # -> frozenset[Unknown]:
		...
	
	def __getitem__(self, track):
		...
	
	def __delitem__(self, track): # -> None:
		...
	
	def __setitem__(self, track, entry): # -> None:
		...
	
	def __len__(self): # -> int:
		...
	
	def __iter__(self): # -> Iterator[Unknown]:
		...
	
	def keys(self): # -> dict_keys[Unknown, Unknown]:
		...
	
	tracks = ...
	def __repr__(self): # -> str:
		...
	


class TrackTableEntry(MutableMapping):
	def __init__(self, values=..., nameIndex=...) -> None:
		...
	
	def toXML(self, writer, ttFont): # -> None:
		...
	
	def fromXML(self, name, attrs, content, ttFont): # -> None:
		...
	
	def __getitem__(self, size):
		...
	
	def __delitem__(self, size): # -> None:
		...
	
	def __setitem__(self, size, value): # -> None:
		...
	
	def __len__(self): # -> int:
		...
	
	def __iter__(self): # -> Iterator[Unknown]:
		...
	
	def keys(self): # -> dict_keys[Unknown, Unknown]:
		...
	
	sizes = ...
	def __repr__(self): # -> str:
		...
	
	def __eq__(self, other) -> bool:
		...
	
	def __ne__(self, other) -> bool:
		...
	


